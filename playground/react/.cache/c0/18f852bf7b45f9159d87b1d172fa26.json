{"id":"../../../node_modules/@ds.e/react/lib/organisms/YouTubePlayList/YouTubePlayList.js","dependencies":[{"name":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js.map","includedInParent":true,"mtime":1645938604022},{"name":"C:\\develop\\ReactStage2\\playground\\react\\package.json","includedInParent":true,"mtime":1645844232764},{"name":"C:\\develop\\ReactStage2\\playground\\react\\.babelrc","includedInParent":true,"mtime":1645844240595},{"name":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\package.json","includedInParent":true,"mtime":1645935508394},{"name":"react","loc":{"line":1,"column":43,"index":43},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\react\\index.js"},{"name":"@ds.e/services","loc":{"line":2,"column":27,"index":79},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\services\\lib\\index.js"},{"name":"../../atoms/VideoPlayer/VideoPlayer.js","loc":{"line":3,"column":24,"index":121},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\atoms\\VideoPlayer\\VideoPlayer.js"},{"name":"../../atoms/Padding/Padding.js","loc":{"line":4,"column":20,"index":183},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\atoms\\Padding\\Padding.js"},{"name":"../../atoms/FlexContainer/FlexContainer.js","loc":{"line":5,"column":26,"index":243},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\atoms\\FlexContainer\\FlexContainer.js"},{"name":"../../molecules/YouTubeList/YouTubeList.js","loc":{"line":6,"column":24,"index":313},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\molecules\\YouTubeList\\YouTubeList.js"},{"name":"socket.io-client","loc":{"line":7,"column":23,"index":382},"parent":"C:\\develop\\ReactStage2\\node_modules\\@ds.e\\react\\lib\\organisms\\YouTubePlayList\\YouTubePlayList.js","resolved":"C:\\develop\\ReactStage2\\node_modules\\socket.io-client\\build\\esm\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _services = require(\"@ds.e/services\");\n\nvar _VideoPlayer = _interopRequireDefault(require(\"../../atoms/VideoPlayer/VideoPlayer.js\"));\n\nvar _Padding = _interopRequireDefault(require(\"../../atoms/Padding/Padding.js\"));\n\nvar _FlexContainer = _interopRequireDefault(require(\"../../atoms/FlexContainer/FlexContainer.js\"));\n\nvar _YouTubeList = _interopRequireDefault(require(\"../../molecules/YouTubeList/YouTubeList.js\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io-client\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst YouTubePlayList = () => {\n  const serviceApi = _services.ServiceApi.getInstance();\n\n  const [playListObject, setPlayListObject] = (0, _react.useState)({\n    playList: new Map(),\n    currentPlaying: ''\n  });\n\n  const onVideoPush = data => {\n    setPlayListObject(prevState => {\n      const clonedList = new Map(prevState.playList);\n      clonedList.set(data.videoId, data);\n      return {\n        playList: clonedList,\n        currentPlaying: prevState.currentPlaying\n      };\n    });\n  };\n\n  (0, _react.useEffect)(() => {\n    const socket = (0, _socket.default)('http://localhost:3001');\n    socket.on('list', data => {\n      if (data.action === 'addVideo') {\n        onVideoPush(data.list);\n      }\n    });\n\n    (async () => {\n      const result = await serviceApi.getAllListItems();\n      if (!result) return;\n      setPlayListObject({\n        playList: result,\n        currentPlaying: result.keys().next().value\n      });\n    })();\n  }, []);\n\n  const onVideoAdded = item => {\n    console.log(item);\n    serviceApi.addItem(item);\n    setPlayListObject(prevState => {\n      const clonedList = new Map(prevState.playList);\n      clonedList.set(item.videoId, item);\n      return {\n        playList: clonedList,\n        currentPlaying: prevState.currentPlaying ? prevState.currentPlaying : clonedList.keys().next().value\n      };\n    });\n  };\n\n  const onVideoEnded = () => {\n    setPlayListObject(prevState => {\n      const clonedList = new Map(prevState.playList);\n      clonedList.delete(prevState.currentPlaying);\n      return {\n        playList: clonedList,\n        currentPlaying: clonedList.keys().next().value\n      };\n    });\n  };\n\n  const onVideoSelected = id => setPlayListObject(prevState => ({\n    playList: prevState.playList,\n    currentPlaying: id\n  }));\n\n  const onSortEnded = arrayList => {\n    setPlayListObject(prevState => {\n      const clonedList = arrayList.reduce((a, b) => {\n        a = a || {};\n        a[b.videoId] = b;\n        return a;\n      }, {});\n      return {\n        playList: new Map(Object.entries(clonedList)),\n        currentPlaying: prevState.currentPlaying\n      };\n    });\n  };\n\n  return _react.default.createElement(\"div\", {\n    className: \"dse-youtube-playlist-container\"\n  }, _react.default.createElement(_Padding.default, {\n    cssClass: \"dse-dimention-inheritance\",\n    space: 'xxxl'\n  }, _react.default.createElement(_FlexContainer.default, {\n    width: '10b',\n    height: '8b'\n  }, _react.default.createElement(_YouTubeList.default, {\n    items: playListObject.playList,\n    onVideoAdded: onVideoAdded,\n    onVideoSelected: onVideoSelected,\n    onSortEnded: onSortEnded\n  }), _react.default.createElement(_VideoPlayer.default, {\n    containerClassName: 'dse-videoplayer-container',\n    videoId: playListObject.currentPlaying,\n    opts: {\n      playerVars: {\n        autoplay: 1\n      },\n      height: '100%',\n      width: '100%'\n    },\n    onEnd: onVideoEnded\n  }))));\n};\n\nexports.default = YouTubePlayList;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"49454c92958c72013e54d019103f505f","cacheData":{"env":{}}}